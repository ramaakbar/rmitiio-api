{
  "openapi": "3.0.3",
  "info": {
    "title": "REST API Rmitiio Docs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/"
    }
  ],
  "tags": [
    {
      "name": "default"
    },
    {
      "name": "auth",
      "description": "User authentication"
    },
    {
      "name": "post"
    },
    {
      "name": "user"
    },
    {
      "name": "comment"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "default"
        ],
        "description": "Default API route",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "user login",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "login successful",
            "headers": {
              "Set-Cookie": {
                "description": "refresh token",
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; Path=/; HttpOnly"
                }
              },
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Wrong credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register a user",
        "operationId": "RegisterUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get new access token using refresh token",
        "operationId": "refreshUser",
        "responses": {
          "200": {
            "description": "refresh success",
            "headers": {
              "Set-Cookie": {
                "description": "refresh token",
                "schema": {
                  "type": "string",
                  "example": "jwt=abcde12345; Path=/; HttpOnly"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access token expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "operationId": "logoutUser",
        "summary": "logout user and clear cookies",
        "responses": {
          "200": {
            "description": "Cookies cleared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "If no cookie, response send no content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get all posts with offset pagination",
        "operationId": "offsetPost",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post per page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paginated posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OffsetPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "post"
        ],
        "summary": "Create new post. need to be logged in",
        "operationId": "createPost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "security": [
          {
            "cookieRefreshToken": []
          },
          {
            "bearerAccessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/cursor": {
      "get": {
        "tags": [
          "post"
        ],
        "summary": "Get all posts with cursor pagination",
        "operationId": "cursorPost",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of post per page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "cursor pointing to the last item",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "paginated posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursorPostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "patch": {
        "tags": [
          "post"
        ],
        "summary": "Update user's post. need to be logged in.",
        "operationId": "updatePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "The post id that want to be update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "security": [
          {
            "cookieRefreshToken": []
          },
          {
            "bearerAccessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "summary": "Update user's post. need to be logged in.",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "The post id that want to be delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "cookieRefreshToken": []
          },
          {
            "bearerAccessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@test.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@test.com"
          },
          "username": {
            "type": "string",
            "example": "example_test"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "passwordConfirmation": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "email": {
                "type": "string",
                "example": "example@test.com"
              },
              "username": {
                "type": "string",
                "example": "example_test"
              },
              "picture": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        }
      },
      "OffsetPostResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "example": 1
              },
              "pageCount": {
                "type": "integer",
                "example": 1
              },
              "currentPage": {
                "type": "integer",
                "example": 1
              },
              "perPage": {
                "type": "integer",
                "example": 1
              },
              "from": {
                "type": "integer",
                "example": 1
              },
              "to": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostWithComment"
            }
          }
        }
      },
      "CursorPostResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "nextCursor": {
                "type": "integer",
                "example": 1
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostWithComment"
            }
          }
        }
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "PostWithComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "comment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "postId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieRefreshToken": {
        "type": "apiKey",
        "name": "jwt",
        "in": "cookie"
      },
      "bearerAccessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      }
    }
  }
}